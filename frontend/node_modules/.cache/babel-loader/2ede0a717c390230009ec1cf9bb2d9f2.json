{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Eduardo\\\\Desktop\\\\sds3\\\\frontend\\\\src\\\\components\\\\BarChart\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport Chart from \"react-apexcharts\";\nimport { round } from \"utils/format\";\nimport { BASE_URL } from \"utils/requests\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BarChart = () => {\n  _s();\n\n  const [chartData, setChartData] = useState({\n    labels: {\n      categories: []\n    },\n    series: [{\n      name: \"\",\n      data: []\n    }]\n  });\n  useEffect(() => {\n    axios.get(`${BASE_URL}/sales/amount-by-seller`).then(response => {\n      const data = response.data;\n      const myLabels = data.map(x => x.sellerName);\n      const mySeries = data.map(x => round(x.deals / x.visited * 100.0, 1));\n      console.log(data);\n      setChartData({\n        labels: {\n          categories: myLabels\n        },\n        series: [{\n          name: \" % Sucesso\",\n          data: mySeries\n        }]\n      });\n    }).catch(error => console.log(error));\n  }, []);\n  const options = {\n    plotOptions: {\n      bar: {\n        horizontal: true\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Chart, {\n    options: { ...options,\n      xaxis: chartData.labels\n    },\n    series: chartData.series,\n    type: \"bar\",\n    height: \"240\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BarChart, \"VMQnH03n9ghyFYkYTYVmPwVKAdg=\");\n\n_c = BarChart;\nexport default BarChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"BarChart\");","map":{"version":3,"sources":["C:/Users/Eduardo/Desktop/sds3/frontend/src/components/BarChart/index.tsx"],"names":["axios","useEffect","useState","Chart","round","BASE_URL","BarChart","chartData","setChartData","labels","categories","series","name","data","get","then","response","myLabels","map","x","sellerName","mySeries","deals","visited","console","log","catch","error","options","plotOptions","bar","horizontal","xaxis"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AAEA,SAASC,KAAT,QAAsB,cAAtB;AACA,SAASC,QAAT,QAAyB,gBAAzB;;;AAaA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAY;AACpDO,IAAAA,MAAM,EAAE;AACNC,MAAAA,UAAU,EAAE;AADN,KAD4C;AAIpDC,IAAAA,MAAM,EAAE,CACN;AACEC,MAAAA,IAAI,EAAE,EADR;AAEEC,MAAAA,IAAI,EAAE;AAFR,KADM;AAJ4C,GAAZ,CAA1C;AAYAZ,EAAAA,SAAS,CAAC,MAAM;AACdD,IAAAA,KAAK,CAACc,GAAN,CAAW,GAAET,QAAS,yBAAtB,EACCU,IADD,CACMC,QAAQ,IAAI;AACd,YAAMH,IAAI,GAAGG,QAAQ,CAACH,IAAtB;AACA,YAAMI,QAAQ,GAAGJ,IAAI,CAACK,GAAL,CAASC,CAAC,IAAIA,CAAC,CAACC,UAAhB,CAAjB;AACA,YAAMC,QAAQ,GAAGR,IAAI,CAACK,GAAL,CAASC,CAAC,IAAIf,KAAK,CAACe,CAAC,CAACG,KAAF,GAAUH,CAAC,CAACI,OAAZ,GAAsB,KAAvB,EAA8B,CAA9B,CAAnB,CAAjB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYZ,IAAZ;AACAL,MAAAA,YAAY,CAAC;AACTC,QAAAA,MAAM,EAAE;AACJC,UAAAA,UAAU,EAAEO;AADR,SADC;AAIPN,QAAAA,MAAM,EAAE,CACN;AACEC,UAAAA,IAAI,EAAE,YADR;AAEEC,UAAAA,IAAI,EAAEQ;AAFR,SADM;AAJD,OAAD,CAAZ;AAWH,KAjBD,EAkBCK,KAlBD,CAkBQC,KAAD,IAAWH,OAAO,CAACC,GAAR,CAAYE,KAAZ,CAlBlB;AAmBH,GApBU,EAoBR,EApBQ,CAAT;AAuBA,QAAMC,OAAO,GAAG;AACdC,IAAAA,WAAW,EAAE;AACXC,MAAAA,GAAG,EAAE;AACHC,QAAAA,UAAU,EAAE;AADT;AADM;AADC,GAAhB;AAOA,sBACE,QAAC,KAAD;AACE,IAAA,OAAO,EAAE,EAAE,GAAGH,OAAL;AAAcI,MAAAA,KAAK,EAAEzB,SAAS,CAACE;AAA/B,KADX;AAEE,IAAA,MAAM,EAAEF,SAAS,CAACI,MAFpB;AAGE,IAAA,IAAI,EAAC,KAHP;AAIE,IAAA,MAAM,EAAC;AAJT;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAnDD;;GAAML,Q;;KAAAA,Q;AAqDN,eAAeA,QAAf","sourcesContent":["import axios from \"axios\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport Chart from \"react-apexcharts\";\nimport { SaleSuccess } from \"types/sale\";\nimport { round } from \"utils/format\";\nimport { BASE_URL } from \"utils/requests\";\n\ntype SeriesData = {\n  name: string;\n  data: number[];\n};\n\ntype ChartData = {\n  labels: {\n    categories: string[];\n  };\n  series: SeriesData[];\n};\nconst BarChart = () => {\n  const [chartData, setChartData] = useState<ChartData>({\n    labels: {\n      categories: [],\n    },\n    series: [\n      {\n        name: \"\",\n        data: [],\n      },\n    ],\n  });\n\n  useEffect(() => {\n    axios.get(`${BASE_URL}/sales/amount-by-seller`)\n    .then(response => {\n        const data = response.data as SaleSuccess[];\n        const myLabels = data.map(x => x.sellerName);\n        const mySeries = data.map(x => round(x.deals / x.visited * 100.0, 1));\n        console.log(data)\n        setChartData({\n            labels: {\n                categories: myLabels,\n              },\n              series: [\n                {\n                  name: \" % Sucesso\",\n                  data: mySeries,\n                },\n              ],\n        })\n    })\n    .catch((error) => console.log(error));\n}, [])\n\n\n  const options = {\n    plotOptions: {\n      bar: {\n        horizontal: true,\n      },\n    },\n  };\n  return (\n    <Chart\n      options={{ ...options, xaxis: chartData.labels }}\n      series={chartData.series}\n      type=\"bar\"\n      height=\"240\"\n    />\n  );\n};\n\nexport default BarChart;\n"]},"metadata":{},"sourceType":"module"}