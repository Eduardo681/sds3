{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Eduardo\\\\Desktop\\\\sds3\\\\frontend\\\\src\\\\components\\\\DonutChart\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport Chart from 'react-apexcharts';\nimport { BASE_URL } from 'utils/requests';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DonutChart = () => {\n  _s();\n\n  const [chartData, setChartData] = useState({\n    labels: [],\n    series: []\n  });\n  useEffect(() => {\n    axios.get(`${BASE_URL}/sales/amount-by-seller`).then(response => {\n      const data = response.data;\n      const myLabels = data.map(x => x.sellerName);\n      const mySeries = data.map(x => x.sum);\n      console.log(data);\n      setChartData({\n        labels: myLabels,\n        series: mySeries\n      });\n    }).catch(error => console.log(error));\n  }, []);\n  const options = {\n    legend: {\n      show: true\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Chart, {\n    options: { ...options,\n      labels: ['teste']\n    },\n    series: [1],\n    type: \"donut\",\n    height: \"240\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DonutChart, \"DYPdSnt7WgRQafJy+u0piLkcoAo=\");\n\n_c = DonutChart;\nexport default DonutChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"DonutChart\");","map":{"version":3,"sources":["C:/Users/Eduardo/Desktop/sds3/frontend/src/components/DonutChart/index.tsx"],"names":["axios","useEffect","useState","Chart","BASE_URL","DonutChart","chartData","setChartData","labels","series","get","then","response","data","myLabels","map","x","sellerName","mySeries","sum","console","log","catch","error","options","legend","show"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,kBAAlB;AAEA,SAASC,QAAT,QAAyB,gBAAzB;;;AAOA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AAErB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAY;AAACM,IAAAA,MAAM,EAAE,EAAT;AAAaC,IAAAA,MAAM,EAAE;AAArB,GAAZ,CAA1C;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACZD,IAAAA,KAAK,CAACU,GAAN,CAAW,GAAEN,QAAS,yBAAtB,EACCO,IADD,CACMC,QAAQ,IAAI;AACd,YAAMC,IAAI,GAAGD,QAAQ,CAACC,IAAtB;AACA,YAAMC,QAAQ,GAAGD,IAAI,CAACE,GAAL,CAASC,CAAC,IAAIA,CAAC,CAACC,UAAhB,CAAjB;AACA,YAAMC,QAAQ,GAAGL,IAAI,CAACE,GAAL,CAASC,CAAC,IAAIA,CAAC,CAACG,GAAhB,CAAjB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYR,IAAZ;AACAN,MAAAA,YAAY,CAAC;AAACC,QAAAA,MAAM,EAAEM,QAAT;AAAmBL,QAAAA,MAAM,EAAES;AAA3B,OAAD,CAAZ;AACH,KAPD,EAQCI,KARD,CAQQC,KAAD,IAAWH,OAAO,CAACC,GAAR,CAAYE,KAAZ,CARlB;AASH,GAVQ,EAUN,EAVM,CAAT;AAaA,QAAMC,OAAO,GAAG;AACZC,IAAAA,MAAM,EAAE;AACJC,MAAAA,IAAI,EAAE;AADF;AADI,GAAhB;AAKA,sBACI,QAAC,KAAD;AACI,IAAA,OAAO,EAAE,EAAC,GAAGF,OAAJ;AAAchB,MAAAA,MAAM,EAAE,CAAC,OAAD;AAAtB,KADb;AAEI,IAAA,MAAM,EAAE,CAAC,CAAD,CAFZ;AAGI,IAAA,IAAI,EAAC,OAHT;AAII,IAAA,MAAM,EAAC;AAJX;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CA9BD;;GAAMH,U;;KAAAA,U;AAgCN,eAAeA,UAAf","sourcesContent":["import axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport Chart from 'react-apexcharts';\nimport { SaleSum } from 'types/sale';\nimport { BASE_URL } from 'utils/requests';\n\ntype ChartData = {\n    labels: string[];\n    series: number[];\n}\n\nconst DonutChart = () => {\n\n    const [chartData, setChartData] = useState<ChartData>({labels: [], series: []})\n\n    useEffect(() => {\n        axios.get(`${BASE_URL}/sales/amount-by-seller`)\n        .then(response => {\n            const data = response.data as SaleSum[];\n            const myLabels = data.map(x => x.sellerName);\n            const mySeries = data.map(x => x.sum);\n            console.log(data)\n            setChartData({labels: myLabels, series: mySeries})\n        })\n        .catch((error) => console.log(error));\n    }, [])\n\n    \n    const options = {\n        legend: {\n            show: true\n        }\n    }\n    return (\n        <Chart \n            options={{...options,  labels: ['teste']}}\n            series={[1]}\n            type=\"donut\"\n            height=\"240\"\n        />\n    )\n}\n\nexport default DonutChart;"]},"metadata":{},"sourceType":"module"}